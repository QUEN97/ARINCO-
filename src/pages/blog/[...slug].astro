---
import Layout from '../../layouts/Layout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

// 1. Definir tipos para Content Collections
export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post: CollectionEntry<'blog'>) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

// 2. Obtener el post con tipado correcto
const { post } = Astro.props as { post: CollectionEntry<'blog'> };

// 3. Renderizar el contenido de forma segura
const { Content, headings } = await post.render();
---

<Layout>
  <article class="w-full">
    <!-- Hero del artículo -->
    <div class="relative w-full h-96 bg-dark overflow-hidden">
      {post.data.image && (
        <>
          <img 
            src={post.data.image} 
            alt={post.data.title}
            class="absolute inset-0 w-full h-full object-cover opacity-90"
            loading="lazy"
          />
          <div class="absolute inset-0 bg-gradient-to-t from-dark/80 via-dark/30 to-transparent"></div>
        </>
      )}
      
      <div class="container mx-auto px-4 h-full flex flex-col justify-end pb-16 relative z-10">
        <div class="max-w-3xl">
          <span class="text-primary font-semibold tracking-widest uppercase mb-2 inline-block">Artículo</span>
          <h1 class="text-4xl md:text-5xl font-bold text-white mb-4">{post.data.title}</h1>
          
          <div class="flex flex-wrap gap-4 text-white">
            <span class="inline-flex items-center">
              <i class="far fa-calendar-alt mr-2 text-primary"></i>
              {post.data.date.toLocaleDateString('es-ES')}
            </span>
            <span class="inline-flex items-center">
              <i class="fas fa-user mr-2 text-primary"></i>
              {post.data.author}
            </span>
          </div>
        </div>
      </div>
    </div>

    <!-- Contenido principal -->
    <div class="container mx-auto px-4 py-16 max-w-3xl">
      <div class="prose prose-lg max-w-none">
        <Content />
      </div>
      
      <!-- Tags -->
      {post.data.tags?.length > 0 && (
        <div class="mt-12 pt-8 border-t border-gray-200">
          <h3 class="text-lg font-semibold text-dark mb-4">Etiquetas</h3>
          <div class="flex flex-wrap gap-2">
            {post.data.tags.map((tag: string) => (
              <a 
                href={`/blog/tag/${tag}`}  
                class="px-4 py-2 bg-gray-100 text-dark rounded-full text-sm font-medium hover:bg-primary hover:text-white transition-colors"
              >
                #{tag}
              </a>
            ))}
          </div>
        </div>
      )}
      
      <!-- Navegación -->
      <div class="mt-8 flex justify-between">
        <a 
          href="/blog" 
          class="inline-flex items-center text-primary font-medium hover:text-primary-dark transition-colors"
        >
          <i class="fas fa-arrow-left mr-2"></i>
          Volver al blog
        </a>
      </div>
    </div>
  </article>
</Layout>